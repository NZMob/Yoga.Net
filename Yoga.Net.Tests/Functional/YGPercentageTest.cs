using NUnit.Framework;
using static Yoga.Net.YogaGlobal;


namespace Yoga.Net.Tests
{
    [TestFixture]
    public class YGPercentageTest
    {
        // @Generated by gentest/gentest.rb from gentest/fixtures/YGPercentageTest.html
        [Test]
        public void percentage_width_height()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexDirection(root, FlexDirection.Row);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidthPercent(rootChild0, 30);
            YGNodeStyleSetHeightPercent(rootChild0, 30);
            YGNodeInsertChild(root, rootChild0, 0);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(60, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(60, YGNodeLayoutGetHeight(rootChild0));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(140, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(60, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(60, YGNodeLayoutGetHeight(rootChild0));
        }

        [Test]
        public void percentage_position_left_top()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexDirection(root, FlexDirection.Row);
            YGNodeStyleSetWidth(root, 400);
            YGNodeStyleSetHeight(root, 400);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetPositionPercent(rootChild0, Edge.Left, 10);
            YGNodeStyleSetPositionPercent(rootChild0, Edge.Top, 20);
            YGNodeStyleSetWidthPercent(rootChild0, 45);
            YGNodeStyleSetHeightPercent(rootChild0, 55);
            YGNodeInsertChild(root, rootChild0, 0);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(400, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(400, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(40, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(80, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(180, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(220, YGNodeLayoutGetHeight(rootChild0));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(400, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(400, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(260, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(80, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(180, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(220, YGNodeLayoutGetHeight(rootChild0));
        }

        [Test]
        public void percentage_position_bottom_right()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexDirection(root, FlexDirection.Row);
            YGNodeStyleSetWidth(root, 500);
            YGNodeStyleSetHeight(root, 500);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetPositionPercent(rootChild0, Edge.Right, 20);
            YGNodeStyleSetPositionPercent(rootChild0, Edge.Bottom, 10);
            YGNodeStyleSetWidthPercent(rootChild0, 55);
            YGNodeStyleSetHeightPercent(rootChild0, 15);
            YGNodeInsertChild(root, rootChild0, 0);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(500, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(500, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(-100, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(-50, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(275, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(75, YGNodeLayoutGetHeight(rootChild0));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(500, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(500, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(125, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(-50, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(275, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(75, YGNodeLayoutGetHeight(rootChild0));
        }

        [Test]
        public void percentage_flex_basis()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexDirection(root, FlexDirection.Row);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild0, 50);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild1, 25);
            YGNodeInsertChild(root, rootChild1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(125, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(125, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(75, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(75, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(125, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(75, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild1));
        }

        [Test]
        public void percentage_flex_basis_cross()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild0, 50);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild1, 25);
            YGNodeInsertChild(root, rootChild1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(125, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(125, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(75, YGNodeLayoutGetHeight(rootChild1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(125, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(125, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(75, YGNodeLayoutGetHeight(rootChild1));
        }

        [Test]
        public void percentage_flex_basis_cross_min_height()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetMinHeightPercent(rootChild0, 60);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 2);
            YGNodeStyleSetMinHeightPercent(rootChild1, 10);
            YGNodeInsertChild(root, rootChild1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(140, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(140, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(60, YGNodeLayoutGetHeight(rootChild1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(140, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(140, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(60, YGNodeLayoutGetHeight(rootChild1));
        }

        [Test]
        public void percentage_flex_basis_main_max_height()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexDirection(root, FlexDirection.Row);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild0, 10);
            YGNodeStyleSetMaxHeightPercent(rootChild0, 60);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 4);
            YGNodeStyleSetFlexBasisPercent(rootChild1, 10);
            YGNodeStyleSetMaxHeightPercent(rootChild1, 20);
            YGNodeInsertChild(root, rootChild1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(52, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(120, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(52, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(148, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(40, YGNodeLayoutGetHeight(rootChild1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(148, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(52, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(120, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(148, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(40, YGNodeLayoutGetHeight(rootChild1));
        }

        [Test]
        public void percentage_flex_basis_cross_max_height()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild0, 10);
            YGNodeStyleSetMaxHeightPercent(rootChild0, 60);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 4);
            YGNodeStyleSetFlexBasisPercent(rootChild1, 10);
            YGNodeStyleSetMaxHeightPercent(rootChild1, 20);
            YGNodeInsertChild(root, rootChild1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(120, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(120, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(40, YGNodeLayoutGetHeight(rootChild1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(120, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(120, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(40, YGNodeLayoutGetHeight(rootChild1));
        }

        [Test]
        public void percentage_flex_basis_main_max_width()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexDirection(root, FlexDirection.Row);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild0, 15);
            YGNodeStyleSetMaxWidthPercent(rootChild0, 60);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 4);
            YGNodeStyleSetFlexBasisPercent(rootChild1, 10);
            YGNodeStyleSetMaxWidthPercent(rootChild1, 20);
            YGNodeInsertChild(root, rootChild1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(120, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(120, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(40, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(80, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(120, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(40, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(40, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild1));
        }

        [Test]
        public void percentage_flex_basis_cross_max_width()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild0, 10);
            YGNodeStyleSetMaxWidthPercent(rootChild0, 60);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 4);
            YGNodeStyleSetFlexBasisPercent(rootChild1, 15);
            YGNodeStyleSetMaxWidthPercent(rootChild1, 20);
            YGNodeInsertChild(root, rootChild1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(120, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(50, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(40, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(150, YGNodeLayoutGetHeight(rootChild1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(80, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(120, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(160, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(50, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(40, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(150, YGNodeLayoutGetHeight(rootChild1));
        }

        [Test]
        public void percentage_flex_basis_main_min_width()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexDirection(root, FlexDirection.Row);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild0, 15);
            YGNodeStyleSetMinWidthPercent(rootChild0, 60);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 4);
            YGNodeStyleSetFlexBasisPercent(rootChild1, 10);
            YGNodeStyleSetMinWidthPercent(rootChild1, 20);
            YGNodeInsertChild(root, rootChild1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(120, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(120, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(80, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(80, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(120, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(80, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(rootChild1));
        }

        [Test]
        public void percentage_flex_basis_cross_min_width()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild0, 10);
            YGNodeStyleSetMinWidthPercent(rootChild0, 60);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 4);
            YGNodeStyleSetFlexBasisPercent(rootChild1, 15);
            YGNodeStyleSetMinWidthPercent(rootChild1, 20);
            YGNodeInsertChild(root, rootChild1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(50, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(150, YGNodeLayoutGetHeight(rootChild1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(50, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(150, YGNodeLayoutGetHeight(rootChild1));
        }

        [Test]
        public void percentage_multiple_nested_with_padding_margin_and_percentage_values()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetFlexBasisPercent(rootChild0, 10);
            YGNodeStyleSetMargin(rootChild0, Edge.Left, 5);
            YGNodeStyleSetMargin(rootChild0, Edge.Top, 5);
            YGNodeStyleSetMargin(rootChild0, Edge.Right, 5);
            YGNodeStyleSetMargin(rootChild0, Edge.Bottom, 5);
            YGNodeStyleSetPadding(rootChild0, Edge.Left, 3);
            YGNodeStyleSetPadding(rootChild0, Edge.Top, 3);
            YGNodeStyleSetPadding(rootChild0, Edge.Right, 3);
            YGNodeStyleSetPadding(rootChild0, Edge.Bottom, 3);
            YGNodeStyleSetMinWidthPercent(rootChild0, 60);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild0Child0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetMargin(rootChild0Child0, Edge.Left, 5);
            YGNodeStyleSetMargin(rootChild0Child0, Edge.Top, 5);
            YGNodeStyleSetMargin(rootChild0Child0, Edge.Right, 5);
            YGNodeStyleSetMargin(rootChild0Child0, Edge.Bottom, 5);
            YGNodeStyleSetPaddingPercent(rootChild0Child0, Edge.Left, 3);
            YGNodeStyleSetPaddingPercent(rootChild0Child0, Edge.Top, 3);
            YGNodeStyleSetPaddingPercent(rootChild0Child0, Edge.Right, 3);
            YGNodeStyleSetPaddingPercent(rootChild0Child0, Edge.Bottom, 3);
            YGNodeStyleSetWidthPercent(rootChild0Child0, 50);
            YGNodeInsertChild(rootChild0, rootChild0Child0, 0);

            YogaNode rootChild0Child0Child0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetMarginPercent(rootChild0Child0Child0, Edge.Left, 5);
            YGNodeStyleSetMarginPercent(rootChild0Child0Child0, Edge.Top, 5);
            YGNodeStyleSetMarginPercent(rootChild0Child0Child0, Edge.Right, 5);
            YGNodeStyleSetMarginPercent(rootChild0Child0Child0, Edge.Bottom, 5);
            YGNodeStyleSetPadding(rootChild0Child0Child0, Edge.Left, 3);
            YGNodeStyleSetPadding(rootChild0Child0Child0, Edge.Top, 3);
            YGNodeStyleSetPadding(rootChild0Child0Child0, Edge.Right, 3);
            YGNodeStyleSetPadding(rootChild0Child0Child0, Edge.Bottom, 3);
            YGNodeStyleSetWidthPercent(rootChild0Child0Child0, 45);
            YGNodeInsertChild(rootChild0Child0, rootChild0Child0Child0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 4);
            YGNodeStyleSetFlexBasisPercent(rootChild1, 15);
            YGNodeStyleSetMinWidthPercent(rootChild1, 20);
            YGNodeInsertChild(root, rootChild1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(5, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(5, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(190, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(48, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(8, YGNodeLayoutGetLeft(rootChild0Child0));
            Assert.AreEqual(8, YGNodeLayoutGetTop(rootChild0Child0));
            Assert.AreEqual(92, YGNodeLayoutGetWidth(rootChild0Child0));
            Assert.AreEqual(25, YGNodeLayoutGetHeight(rootChild0Child0));

            Assert.AreEqual(10, YGNodeLayoutGetLeft(rootChild0Child0Child0));
            Assert.AreEqual(10, YGNodeLayoutGetTop(rootChild0Child0Child0));
            Assert.AreEqual(36, YGNodeLayoutGetWidth(rootChild0Child0Child0));
            Assert.AreEqual(6, YGNodeLayoutGetHeight(rootChild0Child0Child0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(58, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(142, YGNodeLayoutGetHeight(rootChild1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(5, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(5, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(190, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(48, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(90, YGNodeLayoutGetLeft(rootChild0Child0));
            Assert.AreEqual(8, YGNodeLayoutGetTop(rootChild0Child0));
            Assert.AreEqual(92, YGNodeLayoutGetWidth(rootChild0Child0));
            Assert.AreEqual(25, YGNodeLayoutGetHeight(rootChild0Child0));

            Assert.AreEqual(46, YGNodeLayoutGetLeft(rootChild0Child0Child0));
            Assert.AreEqual(10, YGNodeLayoutGetTop(rootChild0Child0Child0));
            Assert.AreEqual(36, YGNodeLayoutGetWidth(rootChild0Child0Child0));
            Assert.AreEqual(6, YGNodeLayoutGetHeight(rootChild0Child0Child0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(58, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(142, YGNodeLayoutGetHeight(rootChild1));
        }

        [Test]
        public void percentage_margin_should_calculate_based_only_on_width()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 100);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetMarginPercent(rootChild0, Edge.Left, 10);
            YGNodeStyleSetMarginPercent(rootChild0, Edge.Top, 10);
            YGNodeStyleSetMarginPercent(rootChild0, Edge.Right, 10);
            YGNodeStyleSetMarginPercent(rootChild0, Edge.Bottom, 10);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild0Child0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(rootChild0Child0, 10);
            YGNodeStyleSetHeight(rootChild0Child0, 10);
            YGNodeInsertChild(rootChild0, rootChild0Child0, 0);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(20, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(20, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(160, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(60, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0Child0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child0));
            Assert.AreEqual(10, YGNodeLayoutGetWidth(rootChild0Child0));
            Assert.AreEqual(10, YGNodeLayoutGetHeight(rootChild0Child0));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(20, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(20, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(160, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(60, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(150, YGNodeLayoutGetLeft(rootChild0Child0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child0));
            Assert.AreEqual(10, YGNodeLayoutGetWidth(rootChild0Child0));
            Assert.AreEqual(10, YGNodeLayoutGetHeight(rootChild0Child0));
        }

        [Test]
        public void percentage_padding_should_calculate_based_only_on_width()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 100);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild0, 1);
            YGNodeStyleSetPaddingPercent(rootChild0, Edge.Left, 10);
            YGNodeStyleSetPaddingPercent(rootChild0, Edge.Top, 10);
            YGNodeStyleSetPaddingPercent(rootChild0, Edge.Right, 10);
            YGNodeStyleSetPaddingPercent(rootChild0, Edge.Bottom, 10);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild0Child0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(rootChild0Child0, 10);
            YGNodeStyleSetHeight(rootChild0Child0, 10);
            YGNodeInsertChild(rootChild0, rootChild0Child0, 0);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(20, YGNodeLayoutGetLeft(rootChild0Child0));
            Assert.AreEqual(20, YGNodeLayoutGetTop(rootChild0Child0));
            Assert.AreEqual(10, YGNodeLayoutGetWidth(rootChild0Child0));
            Assert.AreEqual(10, YGNodeLayoutGetHeight(rootChild0Child0));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(170, YGNodeLayoutGetLeft(rootChild0Child0));
            Assert.AreEqual(20, YGNodeLayoutGetTop(rootChild0Child0));
            Assert.AreEqual(10, YGNodeLayoutGetWidth(rootChild0Child0));
            Assert.AreEqual(10, YGNodeLayoutGetHeight(rootChild0Child0));
        }

        [Test]
        public void percentage_absolute_position()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 100);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetPositionType(rootChild0, PositionType.Absolute);
            YGNodeStyleSetPositionPercent(rootChild0, Edge.Left, 30);
            YGNodeStyleSetPositionPercent(rootChild0, Edge.Top, 10);
            YGNodeStyleSetWidth(rootChild0, 10);
            YGNodeStyleSetHeight(rootChild0, 10);
            YGNodeInsertChild(root, rootChild0, 0);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(60, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(10, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(10, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(10, YGNodeLayoutGetHeight(rootChild0));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(60, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(10, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(10, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(10, YGNodeLayoutGetHeight(rootChild0));
        }

        [Test]
        public void percentage_width_height_undefined_parent_size()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidthPercent(rootChild0, 50);
            YGNodeStyleSetHeightPercent(rootChild0, 50);
            YGNodeInsertChild(root, rootChild0, 0);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(0, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(0, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetHeight(rootChild0));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(0, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(0, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetHeight(rootChild0));
        }

        [Test]
        public void percent_within_flex_grow()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexDirection(root, FlexDirection.Row);
            YGNodeStyleSetWidth(root, 350);
            YGNodeStyleSetHeight(root, 100);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(rootChild0, 100);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexGrow(rootChild1, 1);
            YGNodeInsertChild(root, rootChild1, 1);

            YogaNode rootChild1Child0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidthPercent(rootChild1Child0, 100);
            YGNodeInsertChild(rootChild1, rootChild1Child0, 0);

            YogaNode rootChild2 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(rootChild2, 100);
            YGNodeInsertChild(root, rootChild2, 2);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(350, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(100, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(100, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(150, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(rootChild1));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1Child0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1Child0));
            Assert.AreEqual(150, YGNodeLayoutGetWidth(rootChild1Child0));
            Assert.AreEqual(0, YGNodeLayoutGetHeight(rootChild1Child0));

            Assert.AreEqual(250, YGNodeLayoutGetLeft(rootChild2));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild2));
            Assert.AreEqual(100, YGNodeLayoutGetWidth(rootChild2));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(rootChild2));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(350, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(250, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(100, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(100, YGNodeLayoutGetLeft(rootChild1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1));
            Assert.AreEqual(150, YGNodeLayoutGetWidth(rootChild1));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(rootChild1));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild1Child0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild1Child0));
            Assert.AreEqual(150, YGNodeLayoutGetWidth(rootChild1Child0));
            Assert.AreEqual(0, YGNodeLayoutGetHeight(rootChild1Child0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild2));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild2));
            Assert.AreEqual(100, YGNodeLayoutGetWidth(rootChild2));
            Assert.AreEqual(100, YGNodeLayoutGetHeight(rootChild2));
        }

        [Test]
        public void percentage_container_in_wrapping_container()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetJustifyContent(root, Justify.Center);
            YGNodeStyleSetAlignItems(root, YogaAlign.Center);
            YGNodeStyleSetWidth(root, 200);
            YGNodeStyleSetHeight(root, 200);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild0Child0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexDirection(rootChild0Child0, FlexDirection.Row);
            YGNodeStyleSetJustifyContent(rootChild0Child0, Justify.Center);
            YGNodeStyleSetWidthPercent(rootChild0Child0, 100);
            YGNodeInsertChild(rootChild0, rootChild0Child0, 0);

            YogaNode rootChild0Child0Child0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(rootChild0Child0Child0, 50);
            YGNodeStyleSetHeight(rootChild0Child0Child0, 50);
            YGNodeInsertChild(rootChild0Child0, rootChild0Child0Child0, 0);

            YogaNode rootChild0Child0Child1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(rootChild0Child0Child1, 50);
            YGNodeStyleSetHeight(rootChild0Child0Child1, 50);
            YGNodeInsertChild(rootChild0Child0, rootChild0Child0Child1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(50, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(75, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(100, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0Child0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child0));
            Assert.AreEqual(100, YGNodeLayoutGetWidth(rootChild0Child0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0Child0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0Child0Child0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child0Child0));
            Assert.AreEqual(50, YGNodeLayoutGetWidth(rootChild0Child0Child0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0Child0Child0));

            Assert.AreEqual(50, YGNodeLayoutGetLeft(rootChild0Child0Child1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child0Child1));
            Assert.AreEqual(50, YGNodeLayoutGetWidth(rootChild0Child0Child1));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0Child0Child1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(200, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(200, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(50, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(75, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(100, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0Child0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child0));
            Assert.AreEqual(100, YGNodeLayoutGetWidth(rootChild0Child0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0Child0));

            Assert.AreEqual(50, YGNodeLayoutGetLeft(rootChild0Child0Child0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child0Child0));
            Assert.AreEqual(50, YGNodeLayoutGetWidth(rootChild0Child0Child0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0Child0Child0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0Child0Child1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child0Child1));
            Assert.AreEqual(50, YGNodeLayoutGetWidth(rootChild0Child0Child1));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0Child0Child1));
        }

        [Test]
        public void percent_absolute_position()
        {
            YogaConfig config = YGConfigNew();

            YogaNode root = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidth(root, 60);
            YGNodeStyleSetHeight(root, 50);

            YogaNode rootChild0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetFlexDirection(rootChild0, FlexDirection.Row);
            YGNodeStyleSetPositionType(rootChild0, PositionType.Absolute);
            YGNodeStyleSetPositionPercent(rootChild0, Edge.Left, 50);
            YGNodeStyleSetWidthPercent(rootChild0, 100);
            YGNodeStyleSetHeight(rootChild0, 50);
            YGNodeInsertChild(root, rootChild0, 0);

            YogaNode rootChild0Child0 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidthPercent(rootChild0Child0, 100);
            YGNodeInsertChild(rootChild0, rootChild0Child0, 0);

            YogaNode rootChild0Child1 = YGNodeNewWithConfig(config);
            YGNodeStyleSetWidthPercent(rootChild0Child1, 100);
            YGNodeInsertChild(rootChild0, rootChild0Child1, 1);
            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.LTR);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(60, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(30, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(60, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0Child0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child0));
            Assert.AreEqual(60, YGNodeLayoutGetWidth(rootChild0Child0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0Child0));

            Assert.AreEqual(60, YGNodeLayoutGetLeft(rootChild0Child1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child1));
            Assert.AreEqual(60, YGNodeLayoutGetWidth(rootChild0Child1));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0Child1));

            YGNodeCalculateLayout(root, YogaValue.YGUndefined, YogaValue.YGUndefined, Direction.RTL);

            Assert.AreEqual(0, YGNodeLayoutGetLeft(root));
            Assert.AreEqual(0, YGNodeLayoutGetTop(root));
            Assert.AreEqual(60, YGNodeLayoutGetWidth(root));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(root));

            Assert.AreEqual(30, YGNodeLayoutGetLeft(rootChild0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0));
            Assert.AreEqual(60, YGNodeLayoutGetWidth(rootChild0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0));

            Assert.AreEqual(0, YGNodeLayoutGetLeft(rootChild0Child0));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child0));
            Assert.AreEqual(60, YGNodeLayoutGetWidth(rootChild0Child0));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0Child0));

            Assert.AreEqual(-60, YGNodeLayoutGetLeft(rootChild0Child1));
            Assert.AreEqual(0, YGNodeLayoutGetTop(rootChild0Child1));
            Assert.AreEqual(60, YGNodeLayoutGetWidth(rootChild0Child1));
            Assert.AreEqual(50, YGNodeLayoutGetHeight(rootChild0Child1));
        }
    }
}
